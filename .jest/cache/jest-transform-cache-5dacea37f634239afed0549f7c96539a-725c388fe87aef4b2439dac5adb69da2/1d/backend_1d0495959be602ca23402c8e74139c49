f40d3ad41f2b6d1a4c30317f96164ae8
'use strict';require('ts-jest').install();"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WebSocketNode = require("ws");
const ipAddress = "192.168.1.101";
if (ipAddress === "") {
    throw new Error("Please insert an IP-Address for testing");
}
const ws = new WebSocketNode("http://" + ipAddress + ":1880/peripherals");
let count = 0;
test("testServerClientCommunications", (done) => {
    ws.on("open", () => {
        ws.on("message", (m) => {
            let parsedMessage = JSON.parse(m);
            if (parsedMessage.type === "clientAllPeripheralsDataReceived" && parsedMessage.data) {
                closeSocket(done);
            }
            if (parsedMessage.type === "serverAllPeripheralsData" && parsedMessage.data) {
                closeSocket(done);
            }
            if (parsedMessage.type === "serverPeripheralData" && parsedMessage.data) {
                closeSocket(done);
            }
            if (parsedMessage.type === "getClientAllPeripheralsData" && parsedMessage.data) {
                closeSocket(done);
            }
            if (parsedMessage.type === "Error: Illegal message received") {
                closeSocket(done);
            }
            if (parsedMessage.type === "serverPeripheralCommandReceived") {
                closeSocket(done);
            }
        });
        ws.send(JSON.stringify({
            type: "getServerAllPeripheralsData",
            data: [],
            id: "TEST"
        }));
        ws.send(JSON.stringify({
            type: "clientAllPeripheralsData",
            data: [],
            id: "TEST"
        }));
        ws.send(JSON.stringify({
            type: "getServerPeripheralData",
            data: [],
            id: "TEST"
        }));
        ws.send(JSON.stringify({
            type: "serverAllPeripheralsDataReceived",
            data: [],
            id: "TEST"
        }));
        ws.send(JSON.stringify({
            type: "serverPeripheralCommand",
            data: [],
            id: "TEST"
        }));
        ws.send(JSON.stringify({
            type: "RANDOM_MESSAGE",
            data: [],
            id: "TEST"
        }));
    });
});
function closeSocket(done) {
    count++;
    if (count === 6) {
        ws.close();
        done();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2VuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImJhY2tlbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxNQUFNLGFBQWEsR0FBUSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekMsTUFBTSxTQUFTLEdBQVcsZUFBZSxDQUFDO0FBQzFDLEVBQUUsQ0FBQSxDQUFDLFNBQVMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3JCLE1BQU0sSUFBSSxLQUFLLENBQUMseUNBQXlDLENBQUMsQ0FBQztBQUM1RCxDQUFDO0FBQ0QsTUFBTSxFQUFFLEdBQVEsSUFBSSxhQUFhLENBQUMsU0FBUyxHQUFHLFNBQVMsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDO0FBQy9FLElBQUksS0FBSyxHQUFXLENBQUMsQ0FBQztBQUd0QixJQUFJLENBQUMsZ0NBQWdDLEVBQUUsQ0FBQyxJQUFjLEVBQUUsRUFBRTtJQUV6RCxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUU7UUFDbEIsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRTtZQUM5QixJQUFJLGFBQWEsR0FBWSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRTNDLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxJQUFJLEtBQUssa0NBQWtDLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ3JGLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNuQixDQUFDO1lBQ0QsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLElBQUksS0FBSywwQkFBMEIsSUFBSSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDN0UsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25CLENBQUM7WUFDRCxFQUFFLENBQUEsQ0FBQyxhQUFhLENBQUMsSUFBSSxLQUFLLHNCQUFzQixJQUFJLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUN4RSxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbkIsQ0FBQztZQUNELEVBQUUsQ0FBQSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEtBQUssNkJBQTZCLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQy9FLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNuQixDQUFDO1lBQ0QsRUFBRSxDQUFBLENBQUMsYUFBYSxDQUFDLElBQUksS0FBSyxpQ0FBaUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzdELFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNuQixDQUFDO1lBQ0QsRUFBRSxDQUFBLENBQUMsYUFBYSxDQUFDLElBQUksS0FBSyxpQ0FBaUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzdELFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNuQixDQUFDO1FBQ0YsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDdEIsSUFBSSxFQUFFLDZCQUE2QjtZQUNuQyxJQUFJLEVBQUUsRUFBRTtZQUNSLEVBQUUsRUFBRSxNQUFNO1NBQ1YsQ0FBQyxDQUFDLENBQUM7UUFFSixFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDdEIsSUFBSSxFQUFFLDBCQUEwQjtZQUNoQyxJQUFJLEVBQUUsRUFBRTtZQUNSLEVBQUUsRUFBRSxNQUFNO1NBQ1YsQ0FBQyxDQUFDLENBQUM7UUFFSixFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDdEIsSUFBSSxFQUFFLHlCQUF5QjtZQUMvQixJQUFJLEVBQUUsRUFBRTtZQUNSLEVBQUUsRUFBRSxNQUFNO1NBQ1YsQ0FBQyxDQUFDLENBQUM7UUFFSixFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDdEIsSUFBSSxFQUFFLGtDQUFrQztZQUN4QyxJQUFJLEVBQUUsRUFBRTtZQUNSLEVBQUUsRUFBRSxNQUFNO1NBQ1YsQ0FBQyxDQUFDLENBQUM7UUFFSixFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDdEIsSUFBSSxFQUFFLHlCQUF5QjtZQUMvQixJQUFJLEVBQUUsRUFBRTtZQUNSLEVBQUUsRUFBRSxNQUFNO1NBQ1YsQ0FBQyxDQUFDLENBQUM7UUFFSixFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDdEIsSUFBSSxFQUFFLGdCQUFnQjtZQUN0QixJQUFJLEVBQUUsRUFBRTtZQUNSLEVBQUUsRUFBRSxNQUFNO1NBQ1YsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyxDQUFDO0FBRUgscUJBQXFCLElBQWM7SUFDbEMsS0FBSyxFQUFFLENBQUM7SUFDUixFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQixFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDWCxJQUFJLEVBQUUsQ0FBQztJQUNSLENBQUM7QUFDRixDQUFDIn0=